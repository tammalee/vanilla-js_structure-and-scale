{"version":3,"file":"home.js","sources":["src/components/faves.js","src/components/dom.js","src/home.js"],"sourcesContent":["let favesID = 'places_faves';\n\n/**\n * Add a place to the faves\n * @param {String} id The place ID\n */\nfunction addFave (id) {\n\n\t// Get saved items\n\tlet faves = JSON.parse(localStorage.getItem(favesID)) || {};\n\n\t// Add place to it\n\tfaves[id] = true;\n\n\t// Save back to localStorage\n\tlocalStorage.setItem(favesID, JSON.stringify(faves));\n\n}\n\n/**\n * Remove a place from faves\n * @param {String} id The place ID\n */\nfunction removeFave (id) {\n\n\t// Get saved items\n\tlet faves = JSON.parse(localStorage.getItem(favesID)) || {};\n\n\t// Remove place from it\n\tdelete faves[id];\n\n\t// Save back to localStorage\n\tlocalStorage.setItem(favesID, JSON.stringify(faves));\n\n}\n\n/**\n * Check if a place is a favorite\n * @param {String}  id The place ID\n * @param {Boolean}    If true, the place is a favorite\n */\nfunction isFave (id) {\n\n\t// Get saved items\n\tlet faves = JSON.parse(localStorage.getItem(favesID)) || {};\n\n\t// Check if fave exists\n\treturn faves[id];\n\n}\n\nexport { addFave, removeFave, isFave };","import { isFave } from \"./faves.js\";\n\n/**\n * Load icons onto the homepage for favorited places\n */\nfunction loadIcons () {\n\n\t// Get places\n\tlet places = document.querySelectorAll('[data-place]');\n\n\t// Create an icon\n\tlet icon = document.createElement('span');\n\ticon.setAttribute('aria-label', \"Favourited\");\n\ticon.textContent = ' ♥';\n\n\t// Loop through each place and add an icon if it's a favorite\n\tfor (let place of places) {\n\n\t\t// Get the place ID\n\t\tlet id = place.getAttribute('data-place');\n\n\t\t// If place is not a fave, carry on\n\t\tif (!isFave(id)) continue;\n\n\t\t// Otherwise, add an icon\n\t\tlet title = place.querySelector('.place-title');\n\t\tif (!title) continue;\n\t\ttitle.append(icon.cloneNode(true));\n\n\t}\n}\n\n/**\n * Load buttons into the UI\n * @return {[type]} [description]\n */\nfunction loadButtons () {\n\n\t// Check for controls\n\tlet controls = document.querySelector('[data-controls]');\n\tif (!controls) return;\n\n\t// Get the content ID\n\tlet id = controls.getAttribute('data-controls');\n\n\t// Inject buttons\n\tcontrols.innerHTML =\n\t\t`<p>\n\t\t\t<button data-fave=\"${id}\" aria-pressed=\"${isFave(id) ? true : false}\">\n\t\t\t\t<span aria-hidden=\"true\n\t\t\t\t\">♥</span> Favorite\n\t\t\t</button>\n\t\t</p>`;\n\n}\n\nexport { loadIcons, loadButtons };","import { loadIcons } from \"./components/dom.js\";\n\nloadIcons();"],"names":["isFave","id","JSON","parse","localStorage","getItem","places","document","querySelectorAll","icon","createElement","setAttribute","textContent","place","getAttribute","title","querySelector","append","cloneNode","loadIcons"],"mappings":";yBAyCA,SAASA,EAAQC,GAMhB,OAHYC,KAAKC,MAAMC,aAAaC,QA5CvB,kBA4C4C,IAG5CJ,IC1Cd,WAGC,IAAIK,EAASC,SAASC,iBAAiB,gBAGnCC,EAAOF,SAASG,cAAc,QAClCD,EAAKE,aAAa,aAAc,cAChCF,EAAKG,YAAc,KAGnB,IAAK,IAAIC,KAASP,EAAQ,CAMzB,IAAKN,EAHIa,EAAMC,aAAa,eAGX,SAGjB,IAAIC,EAAQF,EAAMG,cAAc,gBAC3BD,GACLA,EAAME,OAAOR,EAAKS,WAAU,KCzB9BC"}